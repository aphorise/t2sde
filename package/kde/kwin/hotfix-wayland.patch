# --- T2-COPYRIGHT-NOTE-BEGIN ---
# T2 SDE: package/*/kwin/hotfix-wayland.patch
# Copyright (C) 2024 The T2 SDE Project
# 
# This Copyright note is generated by scripts/Create-CopyPatch,
# more information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License version 2 as used by the T2 SDE.
# --- T2-COPYRIGHT-NOTE-END ---

--- kwin-6.0.4/src/wayland/outputdevice_v2.cpp.vanilla	2024-04-28 15:06:35.861000000 +0200
+++ kwin-6.0.4/src/wayland/outputdevice_v2.cpp	2024-04-28 15:07:26.558000000 +0200
@@ -446,23 +446,29 @@
 
 void OutputDeviceV2InterfacePrivate::sendBrightnessMetadata(Resource *resource)
 {
+#if 0
     if (resource->version() >= KDE_OUTPUT_DEVICE_V2_BRIGHTNESS_METADATA_SINCE_VERSION) {
         send_brightness_metadata(resource->handle, std::round(m_maxPeakBrightness.value_or(0)), std::round(m_maxAverageBrightness.value_or(0)), std::round(m_minBrightness * 10'000));
     }
+#endif
 }
 
 void OutputDeviceV2InterfacePrivate::sendBrightnessOverrides(Resource *resource)
 {
+#if 0
     if (resource->version() >= KDE_OUTPUT_DEVICE_V2_BRIGHTNESS_OVERRIDES_SINCE_VERSION) {
         send_brightness_overrides(resource->handle, std::round(m_maxPeakBrightnessOverride.value_or(-1)), std::round(m_maxAverageBrightnessOverride.value_or(-1)), std::round(m_minBrightnessOverride.value_or(-0.000'1) * 10'000));
     }
+#endif
 }
 
 void OutputDeviceV2InterfacePrivate::sendSdrGamutWideness(Resource *resource)
 {
+#if 0
     if (resource->version() >= KDE_OUTPUT_DEVICE_V2_SDR_GAMUT_WIDENESS_SINCE_VERSION) {
         send_sdr_gamut_wideness(resource->handle, std::clamp<uint32_t>(m_sdrGamutWideness * 10'000, 0, 10'000));
     }
+#endif
 }
 
 void OutputDeviceV2Interface::updateGeometry()
--- kwin-6.0.4/src/wayland/outputmanagement_v2.cpp.vanilla	2024-04-28 15:08:07.751000000 +0200
+++ kwin-6.0.4/src/wayland/outputmanagement_v2.cpp	2024-04-28 15:08:51.839000000 +0200
@@ -64,8 +64,8 @@
     void kde_output_configuration_v2_set_wide_color_gamut(Resource *resource, wl_resource *outputdevice, uint32_t enable_wcg) override;
     void kde_output_configuration_v2_set_auto_rotate_policy(Resource *resource, wl_resource *outputdevice, uint32_t auto_rotation_policy) override;
     void kde_output_configuration_v2_set_icc_profile_path(Resource *resource, wl_resource *outputdevice, const QString &profile_path) override;
-    void kde_output_configuration_v2_set_brightness_overrides(Resource *resource, wl_resource *outputdevice, int32_t max_peak_brightness, int32_t max_average_brightness, int32_t min_brightness) override;
-    void kde_output_configuration_v2_set_sdr_gamut_wideness(Resource *resource, wl_resource *outputdevice, uint32_t gamut_wideness) override;
+    void kde_output_configuration_v2_set_brightness_overrides(Resource *resource, wl_resource *outputdevice, int32_t max_peak_brightness, int32_t max_average_brightness, int32_t min_brightness);
+    void kde_output_configuration_v2_set_sdr_gamut_wideness(Resource *resource, wl_resource *outputdevice, uint32_t gamut_wideness);
 };
 
 OutputManagementV2InterfacePrivate::OutputManagementV2InterfacePrivate(Display *display)
